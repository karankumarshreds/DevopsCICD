#!/usr/bin/groovy

pipeline {
  // required 
  agent any 

  options {
    // no pipeline will not run concurrently 
    disableConcurrentBuilds ()
  }

  // stages 
  stages {

    stage('BUILD') {
      steps {
        buildApp()
      }
    }

  }

}

// functions 
def buildApp() {
  dir ('./') {
    // using inbuilt groovy syntax for docker image building
    def appImage = docker.build("PYTHON_CICD:${BUILD_NUMBER}")
  }
  
}

def deployApp(env) {
  def containerName = ''
  def port = ''

  if ("${env}" == 'dev') {
    containerName = 'app_dev'
    port = '8888'
  }
  else {
    println "Environment not valid"
    System.exit(5)
  }
  sh "docker ps -f name=${containerName} -q | xargs docker stop"
  sh "docker ps -a -f name=${containerName} -q | xargs -r docker rm"
  sh "docker run -d -p ${port}:5000 --name ${containerName} PYTHON_CICD:${BUILD_NUMBER}"
}